apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "discord-bot.fullname" . }}
  labels:
    {{- include "discord-bot.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "discord-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "discord-bot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "discord-bot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "NODE_ENV"
              value: production
            - name: "LOG_LEVEL"
              valueFrom:
                secretKeyRef:
                  key: logLevel
                  name: {{ .Release.Name }}-general
            - name: "API_TOKEN"
              valueFrom:
                secretKeyRef:
                  key: apiToken
                  name: {{ .Release.Name }}-general
            - name: "DATABASE_URL"
              valueFrom:
                secretKeyRef:
                  key: databaseUrl
                  name: {{ .Release.Name }}-database
            - name: "APPLICATION_ID"
              valueFrom:
                secretKeyRef:
                  key: applicationId
                  name: {{ .Release.Name }}-discord
            - name: "BOT_TOKEN"
              valueFrom:
                secretKeyRef:
                  key: botToken
                  name: {{ .Release.Name }}-discord

            - name: "API_AUTH0_DOMAIN"
              valueFrom:
                secretKeyRef:
                  key: domain
                  name: {{ .Release.Name }}-auth0
            - name: "API_AUTH0_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  key: clientId
                  name: {{ .Release.Name }}-auth0
            - name: "API_AUTH0_AUDIENCE"
              valueFrom:
                secretKeyRef:
                  key: audience
                  name: {{ .Release.Name }}-auth0
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
